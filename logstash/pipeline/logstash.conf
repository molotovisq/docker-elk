input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/config/mariadb-java-client-3.5.1.jar"
    jdbc_driver_class => "org.mariadb.jdbc.Driver"
    jdbc_connection_string => "jdbc:mariadb://mariadb:3306/myloan"
    jdbc_user => "myloan"
    jdbc_password => "loan@Pass2"
    schedule => "* * * * *"
    use_column_value => true
    tracking_column_type => "numeric"
    tracking_column => "message_id"
    last_run_metadata_path => "/usr/share/logstash/batch/last_value_message_id.yml"
    ecs_compatibility => "disabled"
    statement => "SELECT m.id as message_id
      , m.sender as message_sender
      , m.content as message_content
      , m.created_at as message_created_at
      , l.id as loan_id
      , l.value as loan_value
      , l.status as loan_status
      , l.due_at as loan_due_at
      , p.nickname as provider_nickname
      , p.credit_limit as provider_credit_limit
      , c.nickname as client_nickname
      , a.state as client_address_state
      , a.city as client_address_city
      , a.neighborhood  as client_address_neighborhood
      , a.street as client_address_street
      , a.`number` as client_address_number
      FROM messages m
      INNER JOIN loans l on l.id = m.loan_id
      INNER JOIN providers p on p.id = l.provider_id 
      INNER JOIN clients c on c.id = l.client_id 
      INNER JOIN addresses a on a.id = c.address_id  
      WHERE m.id > :sql_last_value
      ORDER BY m.id ASC
      LIMIT 100;
    "
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "prod_messages" # Nome do Ã­ndice no Elasticsearch
    document_id => "%{message_id}"
    user => "elastic"
    password => "changeme"
    action => "update"
    doc_as_upsert => true
  }
  
  # stdout { 
  #   codec => json # Para visualizar os dados no terminal
  # }
}